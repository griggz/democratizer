{"version":3,"sources":["comm/CommInline.js","comm/Comms.js","comm/CommDetail.js","comm/CommForm.js","comm/CommCreate.js","scrape/ScrapeInline.js","scrape/ScrapeDetail.js","scrape/ScrapeForm.js","scrape/ScrapeCreate.js","landing/FeedbackForm.js","landing/Landing.js","myblock/MyBlock.js","App.js","serviceWorker.js","index.js"],"names":["CommInline","comm","this","props","elClass","showContent","react_default","a","createElement","class","undefined","className","Link","maintainScrollPosition","to","pathname","concat","slug","state","fromDashboard","title","id","dist_default","fromNow","ago","updated","react_markdown_default","source","content","slice","trim","Component","Comms","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCommListClass","bind","assertThisInitialized","handleNewComm","loadMoreComms","comms","commsPublic","commsListClass","previous","author","draft","count","next","loadComms","nextEndpoint","endpoint","thisComp","lookupOptions","method","headers","Content-Type","csrfToken","cookie","load","fetch","then","response","json","responseData","commsPublicList","results","filter","setState","staff","catch","error","console","log","commItemData","currentcomms","unshift","event","preventDefault","Button_default","variant","type","onClick","length","map","commItem","index","comm_CommInline","CommDetail","handleCommItemUpdated","doneLoading","owner","status","detail","match","params","loadComm","hrStyle","display","height","border","borderTop","margin","padding","color","username","post","style","CommForm","handleSubmit","handleInputChange","handleDraftChange","clearForm","commTitleRef","React","createRef","commContentRef","commSiteLocationRef","commSlugRef","site_location","redirect","redirectLink","errors","data","_this2","X-CSRFToken","body","JSON","stringify","credentials","newCommItemCreated","alert","_this3","commItemUpdated","updateComm","createComm","key","target","name","value","defineProperty","commCreateForm","reset","defaultState","current","_this4","Redirect","onSubmit","ref","el","htmlFor","checked","onChange","placeholder","required","readOnly","for","href","rel","CommCreate","location","align-items","comm_CommForm","ScrapeInline","reviews","date","rating","review","ScrapeDetail","scrape","visible","words","loadMore","prev","scrapeItemData","loadReviews","business_name","csvDownload","buildFileName","Item","scrape_ScrapeInline","role","ScrapeForm","scrapeLinkRef","link","scraping","createScrape","clearFormRefs","scrapeCreateForm","react_loader_spinner_default","width","ScrapeCreate","scrape_ScrapeForm","FeedbackForm","checkMobileState","document","documentElement","clientWidth","mobile","listenToScroll","scrolled","scrollTop","scrollHeight","clientHeight","pagePosition","animate","aboutCardClass","aboutCardAnimate","feedbackNameRef","feedbackPhoneNumberRef","feedbackEmailRef","feedbackCommentsRef","email","phone_number","comments","createPost","feedbackCreateForm","window","addEventListener","Landing","about","data-hover","aboutItem","landing_FeedbackForm","MyBlock","CommsView","blocks","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\nimport ReactMarkdown from 'react-markdown'\nimport Moment from 'react-moment';\n\nclass CommInline extends Component {\n\n    render() {\n        const {comm} = this.props;\n        const {elClass} = this.props;\n        const showContent = elClass === 'card' ? 'd-block' : 'd-none';\n        return (\n            <div class=\"comms-list\">\n                {comm !== undefined ? <div className={elClass}>\n                        <h1 class=\"comms-title\"><Link\n                            maintainScrollPosition={false} to={{\n                            pathname: `/site-management/comms/${comm.slug}`,\n                            state: {fromDashboard: false}\n                        }}>{comm.title}</Link>&nbsp;\n                            <small className=\"publish_date text-muted\"\n                                   id='alt'>(Updated: <Moment fromNow ago>{comm.updated}</Moment> ago)\n                            </small>\n                        </h1>\n\n                        <p className={showContent}>\n                            <ReactMarkdown\n                                source={comm.content.slice(0, 200).trim().concat('...')}/>\n                            <Link\n                                maintainScrollPosition={false} to={{\n                                pathname: `/site-management/comms/${comm.slug}`,\n                                state: {fromDashboard: false}\n                            }}>Read more\n                            </Link></p>\n                    </div>\n                    : \"\"}\n            </div>\n        );\n    }\n}\n\nexport default CommInline\n","import React, {Component} from 'react';\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport CommInline from './CommInline'\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom'\nimport Moment from \"react-moment\";\n\nclass Comms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.toggleCommListClass = this.toggleCommListClass.bind(this);\n        this.handleNewComm = this.handleNewComm.bind(this);\n        this.loadMoreComms = this.loadMoreComms.bind(this);\n        this.state = {\n            comms: [],\n            commsPublic: [],\n            commsListClass: \"card\",\n            previous: null,\n            author: false,\n            draft: null,\n            count: 0\n        }\n    }\n\n    loadMoreComms() {\n        const {next} = this.state;\n        if (next !== null || next !== undefined) {\n            this.loadComms(next)\n        }\n\n    }\n\n    loadComms(nextEndpoint) {\n        let endpoint = '/api/comms/';\n        if (nextEndpoint !== undefined) {\n            endpoint = nextEndpoint\n        }\n        let thisComp = this;\n        let lookupOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        const csrfToken = cookie.load('csrftoken');\n        if (csrfToken !== undefined) {\n            lookupOptions['credentials'] = 'include';\n            lookupOptions['headers']['X-CSRFToken'] = csrfToken\n        }\n\n        fetch(endpoint, lookupOptions)\n            .then(function (response) {\n                return response.json()\n            }).then(function (responseData) {\n                // let currentcomms = thisComp.state.comms;\n                // let allcomms = currentcomms.concat(responseData.results);\n                let commsPublicList = responseData.results.filter(comm => comm.draft === false);\n\n                thisComp.setState({\n                    comms: thisComp.state.comms.concat(responseData.results),\n                    commsPublic: thisComp.state.commsPublic.concat(commsPublicList),\n                    next: responseData.next,\n                    previous: responseData.previous,\n                    staff: responseData.staff,\n                    draft: responseData.draft,\n                    count: responseData.count\n                })\n            }\n        ).catch(function (error) {\n            console.log(\"error\", error)\n        })\n    }\n\n    handleComms(responseData) {\n        let comms = responseData.filter(comm => comm.draft === false);\n        this.setState({\n            commsPublic: comms\n        })\n    }\n\n    handleNewComm(commItemData) {\n        // console.log(commItemData)\n        let currentcomms = this.state.comms;\n        currentcomms.unshift(commItemData); // unshift\n        this.setState({\n            comms: currentcomms\n        })\n    }\n\n\n    toggleCommListClass(event) {\n        event.preventDefault();\n        let currentListClass = this.state.commsListClass;\n        if (currentListClass === \"\") {\n            this.setState({\n                commsListClass: \"card\",\n            })\n        } else {\n            this.setState({\n                commsListClass: \"\",\n            })\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            comms: [],\n            commsListClass: \"card\",\n            next: null,\n            previous: null,\n            // author: true,\n            count: 0\n        });\n        this.loadComms()\n    }\n\n    render() {\n        const {comms} = this.state;\n        const {commsPublic} = this.state;\n        const {commsListClass} = this.state;\n        const {staff} = this.state;\n        const {next} = this.state;\n        return (\n            <div className=\"container-fluid\">\n                <h1>\n                    {staff === true ? <Link className='mr-2'\n                                            maintainScrollPosition={false}\n                                            to={{\n                                                pathname: `/site-management/comms/create/`,\n                                                state: {fromDashboard: false}\n                                            }}><Button variant=\"outline-dark\"\n                                                       type=\"button\">Create New Comm</Button>\n                    </Link> : \"\"}\n                <Button onClick={this.toggleCommListClass}>List View</Button>\n                </h1>\n                <br/>\n                {staff === true ?\n                    <div>\n                        {comms.length > 0 ? comms.map((commItem, index) => {\n                            return (\n                                <CommInline comm={commItem}\n                                            elClass={commsListClass}/>\n                            )\n                        }) : <p>No comms Found</p>\n                        }\n                    </div>\n                    :\n                    <div>\n                        {comms.length > 0 ? commsPublic.map((commItem, index) => {\n                            return (\n                                <CommInline comm={commItem}\n                                            elClass={commsListClass}/>\n                            )\n                        }) : <p>No Comms Found</p>\n                        }\n                    </div>}\n                <div className=\"d-flex flex-column text-center\">\n                    {next !== null ? <Button\n                        variant=\"outline-dark\"\n                        onClick={this.loadMoreComms}>Load\n                        more</Button> : ''}\n                </div>\n                <br/>\n            </div>\n        );\n    }\n}\n\nexport default Comms;","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport Moment from \"react-moment\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass CommDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.handleCommItemUpdated = this.handleCommItemUpdated.bind(this);\n        this.state = {\n            slug: null,\n            comm: null,\n            doneLoading: false,\n            owner: null\n        }\n    }\n\n    handleCommItemUpdated(commItemData) {\n        this.setState({\n            comm: commItemData\n        })\n    }\n\n    loadComm(slug) {\n        const endpoint = `/api/comms/${slug}/`;\n        let thisComp = this;\n        let lookupOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const csrfToken = cookie.load('csrftoken');\n        if (csrfToken !== undefined) {\n            lookupOptions['credentials'] = 'include';\n            lookupOptions['headers']['X-CSRFToken'] = csrfToken\n        }\n\n        fetch(endpoint, lookupOptions)\n            .then(function (response) {\n                if (response.status === 404) {\n                    console.log('Page not found')\n                }\n                return response.json()\n            }).then(function (responseData) {\n            if (responseData.detail) {\n                thisComp.setState({\n                    doneLoading: true,\n                    comm: null\n                })\n            } else {\n                thisComp.setState({\n                    doneLoading: true,\n                    comm: responseData,\n                    owner: responseData.owner,\n                });\n            }\n        }).catch(function (error) {\n            console.log(\"error\", error)\n        })\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            slug: null,\n            comm: null\n        });\n        if (this.props.match) {\n            const {slug} = this.props.match.params;\n            this.setState({\n                slug: slug,\n                doneLoading: false\n            });\n            this.loadComm(slug)\n        }\n    }\n\n    render() {\n        const {doneLoading} = this.state;\n        const {comm} = this.state;\n        const {owner} = this.state;\n\n        const hrStyle = {\n            display: 'block',\n            height: '1px',\n            border: 0,\n            borderTop: '1px solid #ccc',\n            margin: '1em 0',\n            padding: '0',\n            color: 'white'\n        };\n        return (\n            <p>{(doneLoading === true) ? <div class=\"Main\">\n                {comm === null ? \"Not Found\" :\n                    <div className='row'>\n                        <div className='col-md-10'>\n                            <h1 id='alt'>{comm.title} <small class=\"text-muted\">({comm.slug})</small></h1>\n                            <h4 id='alt'>By {comm.author.username}&nbsp;\n                                {owner === true ?\n                                    <Link className='mr-2'\n                                          maintainScrollPosition={false}\n                                          to={{pathname: `/site-management/comms/${comm.slug}/edit`,\n                                              state: {post: comm}\n                                          }}><Button variant=\"outline-dark\"\n                                                     type=\"button\" id=\"edit-button\">Edit</Button>\n                                    </Link> : \"\"} </h4>\n                            <hr style={hrStyle}/>\n                            <h4>\n                                <small\n                                    className=\"publish_date\"\n                                    id='alt'> Updated: <Moment\n                                    fromNow\n                                    ago>{comm.updated}</Moment> ago&nbsp;\n                                </small>\n                            </h4>\n                            <hr style={hrStyle}/>\n                            <p id=\"alt\">\n                                <ReactMarkdown\n                                    source={comm.content}/>\n                            </p>\n                        </div>\n\n                        <div className='col-md-2'>\n                            <br/>\n                        </div>\n                    </div>\n                }\n            </div> : \"Loading...\"}</p>\n        )\n    }\n}\n\nexport default CommDetail","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport moment from 'moment'\nimport ReactMarkdown from \"react-markdown\";\nimport {Redirect} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass CommForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDraftChange = this.handleDraftChange.bind(this);\n    this.clearForm = this.clearForm.bind(this);\n    this.commTitleRef = React.createRef();\n    this.commContentRef = React.createRef();\n    this.commSiteLocationRef = React.createRef();\n    this.commSlugRef = React.createRef();\n    this.state = {\n      draft: false,\n      title: null,\n      content: null,\n      site_location: '',\n      redirect: false,\n      redirectLink: null,\n      errors: {},\n    }\n  }\n\n  createComm(data) {\n    const endpoint = '/api/comms/';\n    const csrfToken = cookie.load('csrftoken');\n    let thisComp = this;\n    if (csrfToken !== undefined) {\n      let lookupOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      };\n\n      fetch(endpoint, lookupOptions)\n        .then(function (response) {\n          return response.json()\n        }).then(function (responseData) {\n        thisComp.setState({redirectLink: `/site-management/comms/${responseData.slug}`});\n        if (thisComp.props.newCommItemCreated) {\n          thisComp.props.newCommItemCreated(responseData)\n        }\n        thisComp.clearForm();\n      }).catch(function (error) {\n        console.log(\"error\", error);\n        alert(\"An error occurred, please try again later.\")\n      }).then(() => this.setState({redirect: true}));\n    }\n  }\n\n  updateComm(data) {\n    const {post} = this.props;\n    const endpoint = `/api/comms/${post.slug}/`;\n    const csrfToken = cookie.load('csrftoken');\n    let thisComp = this;\n    if (csrfToken !== undefined) {\n      let lookupOptions = {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      };\n\n      fetch(endpoint, lookupOptions)\n        .then(function (response) {\n          return response.json()\n        }).then(function (responseData) {\n        thisComp.setState({redirectLink: `/site-management/comms/${responseData.slug}`});\n        // console.log(responseData)\n        if (thisComp.props.commItemUpdated) {\n          thisComp.props.commItemUpdated(responseData)\n        }\n\n      }).catch(function (error) {\n        console.log(\"error\", error);\n        alert(\"An error occurred, please try again later.\")\n      }).then(() => this.setState({redirect: true}));\n    }\n\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let data = this.state;\n\n    const {post} = this.props;\n    if (post !== undefined) {\n      this.updateComm(data)\n    } else {\n      this.createComm(data)\n    }\n\n  }\n\n  handleInputChange(event) {\n    event.preventDefault();\n    let key = event.target.name;\n    let value = event.target.value;\n    if (key === 'title') {\n      if (value.length > 120) {\n        alert(\"This title is too long\")\n      }\n    }\n    this.setState({\n      [key]: value\n    })\n  }\n\n  handleDraftChange(event) {\n    this.setState({\n      draft: !this.state.draft\n    })\n  }\n\n  clearForm(event) {\n    if (event) {\n      event.preventDefault()\n    }\n    this.commCreateForm.reset();\n    this.defaultState()\n  }\n\n\n  clearFormRefs() {\n    this.commTitleRef.current = '';\n    this.commContentRef.current = '';\n    this.commSiteLocationRef.current = '';\n    this.commSlugRef.current = ''\n  }\n\n\n  defaultState() {\n    this.setState({\n      draft: false,\n      title: null,\n      content: null,\n      site_location: null,\n      slug: null\n    });\n  }\n\n  componentDidMount() {\n    const {post} = this.props;\n    if (post !== undefined) {\n      this.setState({\n        draft: post.draft,\n        title: post.title,\n        content: post.content,\n        site_location: post.site_location,\n        slug: post.slug\n      })\n    } else {\n      this.defaultState()\n    }\n    // this.commTitleRef.current.focus()\n  }\n\n  render() {\n    const {title} = this.state;\n    const {content} = this.state;\n    const {site_location} = this.state;\n    const {redirect} = this.state;\n    const {redirectLink} = this.state;\n    const {slug} = this.state;\n    if (redirect) {\n      return <Redirect to={redirectLink}/>;\n    }\n    return (\n      <div>\n        <h1 id='alt'>Create Comm</h1>\n        <form onSubmit={this.handleSubmit}\n              ref={(el) => this.commCreateForm = el}>\n          <div className='form-group' id='top-row-form'>\n            <label htmlFor='draft'>\n              <input type='checkbox'\n                     checked={this.state.draft}\n                     id='draft'\n                     name='draft'\n                     className='mr-2'\n                     onChange={this.handleDraftChange}/>\n            </label>\n            <Button variant=\"outline-dark\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      this.handleDraftChange()\n                    }}>Draft\n            </Button>\n            <label htmlFor='site_location'>Site Location:<span> </span>\n              <select value={site_location}\n                      id='site_location'\n                      name='site_location'\n                      ref={this.commSiteLocationRef}\n                      className='mr-2'\n                      onChange={this.handleInputChange}>\n                <option value=\"select\">Select</option>\n                <option value=\"comms\">comms</option>\n                <option value=\"scrape\">scrape</option>\n                <option value=\"landing\">landing</option>\n              </select>\n            </label>\n            <button type='submit' className='btn btn-primary'\n                    id='create-submit'>Save\n            </button>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              id='title'\n              name='title'\n              value={title}\n              className='form-control'\n              placeholder='Comms Title'\n              ref={this.commTitleRef}\n              onChange={this.handleInputChange}\n              required='required'/>\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              id='slug'\n              name='slug'\n              readOnly value={slug}\n              className='form-control'\n              // placeholder='Comms Title'\n              ref={this.commSlugRef}\n              // onChange={this.handleInputChange}\n              // required='required'\n            />\n          </div>\n          <div className='form-group'>\n            <label for='content'>\n              <small>Markdown <a\n                href=\"https://www.markdownguide.org/basic-syntax/\"\n                target=\"_blank\" rel=\"noopener noreferrer\">guide</a> For local\n                images use this ex. \"/static/images/deploy_process.svg\"\n              </small>\n            </label>\n            <textarea\n              id='content'\n              ref={this.commContentRef}\n              name='content'\n              value={content}\n              className='form-control'\n              placeholder='Tell me something!'\n              onChange={this.handleInputChange}\n              required='required'/>\n\n          </div>\n          <div className=\"preview\">\n            <div className=\"preview-text\">\n              <ReactMarkdown source={content}/>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default CommForm","import React, {Component} from 'react'\nimport CommForm from './CommForm'\n\nclass CommCreate extends Component {\n\n    render() {\n        const {post} = this.props.location.state;\n        return (\n            <div class=\"col-md-10\" align-items=\"center\">\n                {post !== null ?\n                    <CommForm post={post}/>\n                    : <CommForm />\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default CommCreate\n\n// left for reference\n\n\n// import React, {Component} from 'react'\n// import 'whatwg-fetch'\n// import cookie from 'react-cookies'\n// import moment from 'moment'\n\n// class PostCreate extends Component {\n//     constructor(props){\n//         super(props)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//         this.handleInputChange = this.handleInputChange.bind(this)\n//         this.handleDraftChange = this.handleDraftChange.bind(this)\n//         this.clearForm = this.clearForm.bind(this)\n//         this.postTitleRef = React.createRef()\n//         this.postContentRef = React.createRef()\n//         this.state = {\n//             draft: false,\n//             title: null,\n//             content: null,\n//             publish: null,\n//             errors: {}\n//         }\n//     }\n//     createPost(data){\n//       const endpoint = '/api/posts/' \n//       const csrfToken = cookie.load('csrftoken')\n//       let thisComp = this\n//       if (csrfToken !== undefined) {\n//           let lookupOptions = {\n//               method: \"POST\",\n//               headers: {\n//                   'Content-Type': 'application/json',\n//                   'X-CSRFToken': csrfToken\n//               },\n//               body: JSON.stringify(data),\n//               credentials: 'include'\n//           }\n\n//           fetch(endpoint, lookupOptions)\n//           .then(function(response){\n//               return response.json()\n//           }).then(function(responseData){\n//               console.log(responseData)\n//               if (thisComp.props.newPostItemCreated){\n//                   thisComp.props.newPostItemCreated(responseData)\n//               }\n//               thisComp.clearForm()\n//           }).catch(function(error){\n//               console.log(\"error\", error)\n//               alert(\"An error occured, please try again later.\")\n//           })\n//       } \n\n//   }\n\n//     handleSubmit(event){\n//         event.preventDefault()\n//         let data = this.state\n//         this.createPost(data)\n//     }\n\n//     handleInputChange(event){\n//         event.preventDefault()\n//         let key = event.target.name\n//         let value = event.target.value\n//         if (key === 'title'){\n//             if (value.length > 120){\n//                 alert(\"This title is too long\")\n//             }\n//         }\n//         this.setState({\n//             [key]: value\n//         })\n//     }\n\n//     handleDraftChange(event){\n//       this.setState({\n//         draft: !this.state.draft\n//       })\n//     }\n\n//     clearForm(event){\n//       if (event){\n//         event.preventDefault()\n//       }\n//       this.postCreateForm.reset()\n//     }\n\n\n//     clearFormRefs(){\n//       this.postTitleRef.current=''\n//       this.postContentRef.current=''\n//     }\n\n\n//     componentDidMount(){\n//         this.setState({\n//             draft: false,\n//             title: null,\n//             content: null,\n//             publish: moment(new Date()).format('YYYY-MM-DD'),\n//         })\n//         this.postTitleRef.current.focus()\n//     }\n\n//     render(){\n//         const {publish} = this.state\n//         let thisComp = this\n//         return (\n//             <form onSubmit={this.handleSubmit} ref={(el) => this.postCreateForm = el}>\n//                 <div className='form-group'>\n//                     <label for='title'>Post title</label>\n//                     <input \n//                       type='text' \n//                       id='title' \n//                       name='title' \n//                       className='form-control'\n//                       placeholder='Blog post title' \n//                       ref = {this.postTitleRef}\n//                       onChange={this.handleInputChange} \n//                       required='required'/>\n//                 </div>\n//                  <div className='form-group'>\n//                     <label for='content'>Content</label>\n//                     <textarea id='content' ref = {this.postContentRef} name='content' className='form-control' placeholder='Post content' onChange={this.handleInputChange} required='required'/>\n\n//                 </div>\n//                 <div className='form-group'>\n//                     <label for='draft'>\n//                     <input type='checkbox' checked={this.state.draft} id='draft' name='draft' className='mr-2' onChange={this.handleDraftChange}/>\n//                      Draft </label>\n//                      <button onClick={(event)=>{event.preventDefault();this.handleDraftChange()}}>Toggle Draft</button>\n//                 </div>\n//                 <div className='form-group'>\n//                     <label for='publish'>Publish Date</label>\n//                     <input \n//                     type='date' \n//                     id='publish' \n//                     name='publish' \n//                     className='form-control' \n//                     onChange={this.handleInputChange}\n//                      value={publish}\n//                      required='required'/>\n//                 </div>\n//                 <button type='submit' className='btn btn-primary'>Save</button>\n//                 <button className='btn btn-secondary' onClick={this.clearForm}>Cancel</button>\n//             </form>\n//         )\n//     }\n\n// }\n\n// export default PostCreate","import React, {Component} from 'react';\n\nclass ScrapeInline extends Component {\n\n    render() {\n        const {reviews} = this.props;\n        const hrStyle = {\n            display: 'block',\n            height: '1px',\n            border: 0,\n            borderTop: '1px solid #ccc',\n            margin: '1em 0',\n            padding: '0',\n            color: 'white'\n        };\n        return (\n            <div className=\"col-lg-12\">\n                <td className=\"dash h5\"><b>{reviews.author}</b> |</td>\n                <td className=\"dash h5\"><b>{reviews.date}</b> |</td>\n                <td className=\"dash h5\"><b>{reviews.rating}</b></td>\n                <p className=\"dash\">{reviews.review}</p>\n                <hr style={hrStyle}/>\n            </div>\n        );\n    }\n}\n\nexport default ScrapeInline","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport {Link} from 'react-router-dom'\nimport ScrapeInline from \"../scrape/ScrapeInline\";\nimport {Redirect} from \"react-router-dom\";\nimport csvDownload from 'json-to-csv-export'\nimport Button from 'react-bootstrap/Button';\n\n\nclass ScrapeDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slug: null,\n      scrape: null,\n      doneLoading: false,\n      visible: 25,\n      words: null,\n    };\n    this.loadMore = this.loadMore.bind(this);\n  }\n\n  loadMore() {\n    this.setState((prev) => {\n      return {visible: prev.visible + 25};\n    });\n  }\n\n  handlePostItemUpdated(scrapeItemData) {\n    this.setState({\n      scrape: scrapeItemData\n    })\n  }\n\n  loadReviews(slug) {\n    const endpoint = `/api/scrape/${slug}/`;\n    let thisComp = this;\n    let lookupOptions = {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const csrfToken = cookie.load('csrftoken');\n    if (csrfToken !== undefined) {\n      lookupOptions['credentials'] = 'include';\n      lookupOptions['headers']['X-CSRFToken'] = csrfToken\n    }\n\n    fetch(endpoint, lookupOptions)\n      .then(function (response) {\n        if (response.status === 404) {\n          console.log('Page not found')\n        }\n        return response.json()\n      }).then(function (responseData) {\n      if (responseData.detail) {\n        thisComp.setState({\n          doneLoading: true,\n          scrape: null\n        })\n      } else {\n        thisComp.setState({\n          doneLoading: true,\n          scrape: responseData\n        })\n      }\n    }).catch(function (error) {\n      console.log(\"error\", error)\n    })\n  }\n\n  componentDidMount() {\n    this.setState({\n      slug: null\n    });\n    if (this.props.match) {\n      const {slug} = this.props.match.params;\n      this.setState({\n        slug: slug,\n        doneLoading: false\n      });\n      this.loadReviews(slug);\n    }\n  }\n\n  buildUrl() {\n    const {scrape} = this.state;\n    return (\n      `https://vvayne.io/scrape/results/${scrape.slug}`)\n  }\n\n  buildFileName() {\n    const {scrape} = this.state;\n    return (\n      `${scrape.business_name}.csv`\n    )\n  }\n\n  static routeChange() {\n    let path = `/scrape/create`;\n    return (\n      <Redirect to={path}/>\n    )\n  }\n\n  // runTextAnalysis() {\n  //     const {scrape} = this.state;\n  // }\n\n\n  render() {\n    const {doneLoading} = this.state;\n    const {scrape} = this.state;\n    // console.log(scrape);\n    const hrStyle = {\n      display: 'block',\n      height: '1px',\n      border: 0,\n      borderTop: '1px solid #ccc',\n      margin: '1em 0',\n      padding: '0',\n      color: 'white'\n    };\n\n    return (\n      <section className=\"Results\"> {(doneLoading === true) ?\n        <div\n          className=\"container-fluid\"> {scrape === null ? \"No Reviews Found...In order to use this\\n\" +\n          \"scraper you must be a registered user and\\n\" +\n          \"logged in. If you are logged in and receiving\\n\" +\n          \"this error, please confirm that the business\\n\" +\n          \"you are attempting to scrape has reviews.\" :\n\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-sm-10\">\n              <Link maintainScrollPosition={false} to={{\n                pathname: `/scrape`,\n                state: {fromDashboard: false}\n              }}>\n                <button className={`btn btn-primary`}>New\n                  Scrape\n                </button>\n              </Link>\n              <br/>\n              {/*<ScrapeChart words={scrape.analytics}/>*/}\n              <br/>\n              <h1>{scrape.business_name}</h1>\n              <Button variant=\"secondary\"\n                      onClick={() => csvDownload(scrape.reviews, this.buildFileName())}>\n                Download Data\n              </Button>\n              <hr style={hrStyle}/>\n              {scrape.reviews.length > 0 ? scrape.reviews.slice(0, this.state.visible).map((Item, index) => {\n                return (\n                  <div className=\"row\" key={index}>\n                    <ScrapeInline reviews={Item}/>\n                  </div>)\n              }) : <p>No Reviews Found</p>}\n              {this.state.visible < scrape.reviews.length &&\n              <div className=\"d-flex flex-column text-center\">\n                <Button onClick={this.loadMore}\n                        variant=\"outline-light\" type=\"button\"\n                        className=\"load-more\">Load more</Button>\n              </div>\n              }\n            </div>\n          </div>\n        }\n        </div> : <div class=\"spinner-border\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span></div>}</section>\n    )\n  }\n}\n\nexport default ScrapeDetail","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport {Redirect} from \"react-router-dom\";\nimport Loader from 'react-loader-spinner';\n\nclass ScrapeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.clearForm = this.clearForm.bind(this);\n        this.scrapeLinkRef = React.createRef();\n        this.state = {\n            link: null,\n            redirect: false,\n            redirectLink: null,\n            slug: null,\n            scraping: null,\n            errors: {}\n        }\n    }\n\n    createScrape(data) {\n        const endpoint = '/api/scrape/';\n        const csrfToken = cookie.load('csrftoken');\n        let thisComp = this;\n        if (csrfToken !== undefined) {\n            let lookupOptions = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrfToken\n                },\n                body: JSON.stringify(data),\n                credentials: 'include'\n            };\n\n            fetch(endpoint, lookupOptions)\n                .then(function (response) {\n                    return response.json()\n                }).then(function (responseData) {\n                    thisComp.setState({redirectLink: `/scrape/results/${responseData.slug}`, scraping: null});\n                    // console.log(`scrape/results/${responseData.slug}`);\n                thisComp.clearForm()\n            }).catch(function (error) {\n                console.log(\"error\", error);\n                alert(\"An error occurred, please try again later.\")\n            }).then(() => this.setState({ redirect: true }));\n        }\n\n    }\n\n    // buildRedirect() {\n    //     const {slug} = this.state;\n    //     const {link} = `scrape/results/${slug}`;\n    //     console.log(link);\n    //     return (\n    //         link.toString)\n    // }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let data = this.state;\n\n        const {scrape} = this.props;\n        if (scrape === undefined) {\n        this.setState({scraping: true});\n        this.createScrape(data)\n        }\n        else {\n            this.clearFormRefs();\n        }\n\n    }\n\n    handleInputChange(event) {\n        event.preventDefault();\n        let key = event.target.name;\n        let value = event.target.value;\n        if (key === 'link') {\n            if (value.length > 120) {\n                alert(\"This link is too long\")\n            }\n        }\n        this.setState({\n            [key]: value\n        });\n    }\n\n    clearForm(event) {\n        if (event) {\n            event.preventDefault()\n        }\n        this.scrapeCreateForm.reset();\n        this.defaultState();\n    }\n\n\n    clearFormRefs() {\n        this.scrapeLinkRef.current = '';\n    }\n\n\n    defaultState() {\n        this.setState({\n            link: null,\n        })\n    }\n\n    componentDidMount() {\n        const {scrape} = this.props;\n        if (scrape !== undefined) {\n            this.setState({\n                link: scrape.link,\n            })\n        } else {\n            this.defaultState()\n        }\n        // this.postTitleRef.current.focus()\n    }\n\n    render() {\n        const {link} = this.state;\n        const { redirect } = this.state;\n        const { redirectLink } = this.state;\n        const { scraping } = this.state;\n        if (scraping) {\n            return <div id=\"react-loader\"><Loader type=\"Puff\" color=\"#00BFFF\" height=\"200\" width=\"200\" /> ......scraping</div>\n        }\n        if (redirect) {\n        return <Redirect to={redirectLink}/>;\n        }\n        return (\n            <form onSubmit={this.handleSubmit} ref={(el) => this.scrapeCreateForm = el}>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        id='link'\n                        name='link'\n                        value={link}\n                        className='form-control'\n                        placeholder='Yelp Link'\n                        ref={this.scrapeLinkRef}\n                        onChange={this.handleInputChange}\n                        required='required'/>\n                </div>\n                <button type='submit' className='btn btn-primary'>Scrape</button>\n                 &nbsp;\n                <button className={`btn btn-secondary`}\n                        onClick={this.clearForm}>Clear</button>\n            </form>\n        )\n    }\n\n}\n\nexport default ScrapeForm","import React, {Component} from 'react'\nimport ScrapeForm from './ScrapeForm'\nimport cookie from \"react-cookies\";\nimport ReactMarkdown from \"react-markdown\";\n\nclass ScrapeCreate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slug: null,\n            comms: [],\n            commsListClass: \"card\",\n            previous: null,\n            author: false,\n            draft: null,\n            count: 0\n        };\n    }\n\n    loadComms(nextEndpoint) {\n        let endpoint = '/api/comms/';\n        if (nextEndpoint !== undefined) {\n            endpoint = nextEndpoint\n        }\n        let thisComp = this;\n        let lookupOptions = {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        const csrfToken = cookie.load('csrftoken');\n        if (csrfToken !== undefined) {\n            lookupOptions['credentials'] = 'include';\n            lookupOptions['headers']['X-CSRFToken'] = csrfToken\n        }\n\n        fetch(endpoint, lookupOptions)\n            .then(function (response) {\n                return response.json()\n            }).then(function (responseData) {\n                thisComp.setState({\n                    comms: thisComp.state.comms.concat(responseData.results.filter(post => post.site_location === 'scrape' && post.draft === false)),\n                    next: responseData.next,\n                    previous: responseData.previous,\n                    staff: responseData.staff,\n                    draft: responseData.draft,\n                    count: responseData.count\n                })\n            }\n        ).catch(function (error) {\n            console.log(\"error\", error)\n        })\n    }\n\n    componentDidMount() {\n        this.setState({\n            comms: [],\n            next: null,\n            previous: null,\n            count: 0\n        });\n        this.loadComms()\n    }\n\n    render() {\n        const {comms} = this.state;\n        const hrStyle = {\n            display: 'block',\n            height: '1px',\n            border: 0,\n            borderTop: '1px solid #ccc',\n            margin: '1em 0',\n            padding: '0',\n            color: 'white'\n        };\n        return (\n            <div class=\"container col-sm-10\">\n                <div className=\"scrape_form\">\n                    <ScrapeForm/>\n                </div>\n                {comms.length > 0 ? comms.map((commItem, index) => {\n                    return (\n                        <div className=\"comms\">\n                            {commItem !== undefined ?\n                                <ReactMarkdown source={commItem.content}/>\n                                : \"\"}\n                        </div>\n                    )\n                }) : <p>No Messages To Display</p>\n                }\n            </div>\n\n        )\n    }\n\n}\n\nexport default ScrapeCreate","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport {Redirect} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass FeedbackForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.clearForm = this.clearForm.bind(this);\n    this.feedbackNameRef = React.createRef();\n    this.feedbackPhoneNumberRef = React.createRef();\n    this.feedbackEmailRef = React.createRef();\n    this.feedbackCommentsRef = React.createRef();\n    this.state = {\n      name: null,\n      email: null,\n      phone_number: null,\n      comments: null,\n      redirect: false,\n      redirectLink: null,\n      errors: {},\n      aboutCardClass: \"shadow card rounded-0 invisible\",\n      aboutCardAnimate: \"\",\n      animate: false,\n      mobile: false,\n    }\n  }\n\n  createPost(data) {\n    const endpoint = '/api/landing/';\n    const csrfToken = cookie.load('csrftoken');\n    let thisComp = this;\n    if (csrfToken !== undefined) {\n      let lookupOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      };\n\n      fetch(endpoint, lookupOptions)\n        .then(function (response) {\n          return response.json()\n        }).then(function (responseData) {\n        thisComp.setState({\n          redirectLink: `/`,\n        });\n        thisComp.clearForm()\n      }).catch(function (error) {\n        console.log(\"error\", error);\n        alert(\"An error occurred, please try again later.\")\n      }).then(() => this.setState({redirect: true}));\n    }\n\n  }\n\n  // buildRedirect() {\n  //     const {slug} = this.state;\n  //     const {link} = `scrape/results/${slug}`;\n  //     console.log(link);\n  //     return (\n  //         link.toString)\n  // }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let data = this.state;\n\n    const {post} = this.props;\n    if (post === undefined) {\n      this.createPost(data)\n    } else {\n      this.clearFormRefs();\n    }\n\n  }\n\n  handleInputChange(event) {\n    event.preventDefault();\n    let key = event.target.name;\n    let value = event.target.value;\n    if (key === 'link') {\n      if (value.length > 120) {\n        alert(\"This link is too long\")\n      }\n    }\n    this.setState({\n      [key]: value\n    });\n  }\n\n  checkMobileState = () => {\n    const width = document.documentElement.clientWidth;\n    if (width <= 768) {\n      this.setState({\n        mobile: true\n      })\n    }\n  };\n\n  listenToScroll = () => {\n    const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n    const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    const scrolled = winScroll / height;\n\n    this.setState({\n      pagePosition: scrolled\n    });\n\n    if (scrolled >= .53 && this.state.mobile === false) {\n      this.setState({\n        animate: true\n      });\n    }\n\n    if (this.state.animate === true) {\n      this.setState({\n        aboutCardClass: \"shadow card rounded-0 h-100\",\n        aboutCardAnimate: \"card-animate\"\n      })\n    }\n\n    if (this.state.mobile === true) {\n      this.setState({\n        aboutCardClass: \"shadow card rounded-0 h-100\"\n      })\n    }\n  };\n\n  clearForm(event) {\n    if (event) {\n      event.preventDefault()\n    }\n    this.feedbackCreateForm.reset();\n    this.defaultState();\n  }\n\n\n  clearFormRefs() {\n    this.feedbackNameRef.current = '';\n    this.feedbackEmailRef.current = '';\n    this.feedbackPhoneNumberRef.current = '';\n    this.feedbackCommentsRef.current = '';\n  }\n\n\n  defaultState() {\n    this.setState({\n      name: '',\n      email: '',\n      phone_number: '',\n      comments: ''\n    })\n  }\n\n  componentDidMount() {\n    this.checkMobileState();\n    if (this.state.mobile === false) {\n      window.addEventListener('scroll', this.listenToScroll);\n    }\n    const {post} = this.props;\n    if (post !== undefined) {\n      this.setState({\n        name: post.name,\n        email: post.email,\n        phone_number: post.phone_number,\n        comments: post.comments,\n      })\n    } else {\n      this.defaultState()\n    }\n  }\n\n  render() {\n    const {name} = this.state;\n    const {email} = this.state;\n    const {phone_number} = this.state;\n    const {comments} = this.state;\n    const {redirect} = this.state;\n    const {redirectLink} = this.state;\n    const {aboutCardClass} = this.state;\n    const {aboutCardAnimate} = this.state;\n    const hrStyle = {\n      display: 'block',\n      height: '1px',\n      border: 0,\n      borderTop: '1px solid #ccc',\n      margin: '0 1em',\n      padding: '0',\n      color: '#18181E'\n    };\n    if (redirect) {\n      return <Redirect to={redirectLink}/>;\n    }\n    return (\n      <div className=\"col-sm-6 py-2\">\n        <div className={aboutCardClass} id={aboutCardAnimate}>\n          <form ref={(el) => this.feedbackCreateForm = el}>\n            <h1 className=\"hook\">Contact Us</h1>\n            <hr style={hrStyle}/>\n            <div className=\"card-body d-flex flex-column\">\n              <div className='form-group'>\n                <input\n                  type='text'\n                  id='name'\n                  name='name'\n                  value={name}\n                  className='form-control'\n                  placeholder='Name'\n                  ref={this.feedbackNameRef}\n                  onChange={this.handleInputChange}\n                  required='required'/>\n              </div>\n              <div className='form-group'>\n                <input\n                  type='text'\n                  id='email'\n                  name='email'\n                  value={email}\n                  className='form-control'\n                  placeholder='Email'\n                  ref={this.feedbackEmailRef}\n                  onChange={this.handleInputChange}\n                  required='required'/>\n              </div>\n              <div className='form-group'>\n                <input\n                  type='text'\n                  id='phone_number'\n                  name='phone_number'\n                  value={phone_number}\n                  className='form-control'\n                  placeholder='Phone Number'\n                  ref={this.feedbackPhoneNumberRef}\n                  onChange={this.handleInputChange}\n                  required='required'/>\n              </div>\n              <div className='form-group'>\n              <textarea\n                type='text'\n                id='comments'\n                name='comments'\n                style={{height: '15rem'}}\n                value={comments}\n                className='form-control'\n                placeholder='Say Hi!'\n                ref={this.feedbackCommentsRef}\n                onChange={this.handleInputChange}\n                required='required'/>\n              </div>\n              <div className=\"w-100 d-flex flex-column text-center\">\n                <Button variant=\"outline-dark\" type=\"submit\">Submit</Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default FeedbackForm","import React, {Component} from 'react'\nimport 'whatwg-fetch'\nimport cookie from 'react-cookies'\nimport {Link} from 'react-router-dom'\nimport ReactMarkdown from \"react-markdown\";\nimport FeedbackForm from \"../landing/FeedbackForm\";\n\n\nclass Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slug: null,\n      words: null,\n      comms: [],\n      about: [],\n      aboutCardClass: \"shadow card rounded-0 invisible\",\n      aboutCardAnimate: \"\",\n      animate: false,\n      mobile: false,\n      previous: null,\n      author: false,\n      draft: null,\n      count: 0,\n      pagePosition: null\n    };\n  }\n\n  checkMobileState = () => {\n    const width = document.documentElement.clientWidth;\n    if (width <= 768) {\n      this.setState({\n        mobile: true\n      })\n    }\n    return this.state.mobile\n  };\n\n  listenToScroll = () => {\n    const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n    const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    const scrolled = winScroll / height;\n    //\n    // console.log('mobile in scroll', this.state.mobile);\n    // console.log('animate', this.state.animate);\n\n    this.setState({\n      pagePosition: scrolled\n    });\n\n    if (scrolled >= .53 && this.state.mobile === false) {\n      this.setState({\n        animate: true\n      });\n    }\n\n    if (this.state.animate === true) {\n      this.setState({\n        aboutCardClass: \"shadow card rounded-0\",\n        aboutCardAnimate: \"card-animate\"\n      })\n    }\n\n    if (this.state.mobile === true) {\n      this.setState({\n        aboutCardClass: \"shadow card rounded-0\"\n      })\n    }\n  };\n\n  loadComms(nextEndpoint) {\n    let endpoint = '/api/comms/';\n    if (nextEndpoint !== undefined) {\n      endpoint = nextEndpoint\n    }\n    let thisComp = this;\n    let lookupOptions = {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const csrfToken = cookie.load('csrftoken');\n    if (csrfToken !== undefined) {\n      lookupOptions['credentials'] = 'include';\n      lookupOptions['headers']['X-CSRFToken'] = csrfToken\n    }\n\n    fetch(endpoint, lookupOptions)\n      .then(function (response) {\n        return response.json()\n      }).then(function (responseData) {\n\n        thisComp.setState({\n          comms: thisComp.state.comms.concat(responseData.results.filter(post => post.slug === 'landing-tag' && post.draft === false)),\n          about: thisComp.state.about.concat(responseData.results.filter(post => post.slug === 'about' && post.draft === false)),\n          next: responseData.next,\n          previous: responseData.previous,\n          staff: responseData.staff,\n          draft: responseData.draft,\n          count: responseData.count\n        })\n      }\n    ).catch(function (error) {\n      console.log(\"error\", error)\n    })\n  }\n\n  componentDidMount() {\n    this.checkMobileState();\n    if (this.state.mobile === false) {\n      window.addEventListener('scroll', this.listenToScroll);\n    }\n    this.setState({\n      comms: [],\n      about: [],\n      next: null,\n      previous: null,\n      count: 0\n    });\n    this.loadComms();\n  }\n\n\n  render() {\n    const {comms} = this.state;\n    const {about} = this.state;\n    const {aboutCardClass} = this.state;\n    const {aboutCardAnimate} = this.state;\n    const {mobile} = this.state;\n    const hrStyle = {\n      display: 'block',\n      height: '1px',\n      border: 0,\n      borderTop: '1px solid #ccc',\n      margin: '0 1em',\n      padding: '0',\n      color: '#18181E'\n    };\n\n    return (\n      <div>\n        <section className=\"fork\">\n          <div className=\"container\" id=\"top\">\n            {comms.length > 0 ? comms.map((commItem, index) => {\n              return (\n                <div className=\"tag\">\n                  {commItem !== undefined ?\n                    <ReactMarkdown source={commItem.content}/>\n                    : \"\"}\n                </div>\n              )\n            }) : \"\"\n            }\n            <div class=\"vl\"></div>\n            <div class=\"btn-group-vertical\">\n              <a id=\"landing-btn\" href=\"/scrape/\">\n                <button data-hover=\"GO\">\n                  <div>Yelp</div>\n                </button>\n              </a>\n              <Link id=\"landing-btn\" maintainScrollPosition={false} to={{\n                pathname: `/`,\n                state: {fromDashboard: false}\n              }}>\n                <button data-hover=\"UNDER DEVELOPMENT\">\n                  <div>GlassDoor</div>\n                </button>\n              </Link>\n              <Link id=\"landing-btn\" maintainScrollPosition={false} to={{\n                pathname: `/`,\n                state: {fromDashboard: false}\n              }}>\n                <button data-hover=\"UNDER DEVELOPMENT\">\n                  <div>Indeed</div>\n                </button>\n              </Link>\n            </div>\n            <hr style={hrStyle}/>\n          </div>\n        </section>\n        <section class=\"about\" id=\"about\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-sm-6 py-2\">\n                {about.length > 0 ? about.map((aboutItem, index) => {\n                  return (\n                    <div className={aboutCardClass} id={aboutCardAnimate}>\n                      <h1 class=\"hook\">{aboutItem.title}</h1>\n                      <hr style={hrStyle}/>\n                      <div className=\"card-body d-flex flex-column\">\n                        <h5 className=\"card-title\">Democratizing the Worlds\n                          Data</h5>\n                        <p className=\"card-text\">\n                          {aboutItem !== undefined ?\n                            <ReactMarkdown source={aboutItem.content}/>\n                            : \"\"}\n                        </p>\n                      </div>\n                    </div>\n                  )\n                }) : \"\"\n                }\n              </div>\n              <FeedbackForm/>\n            </div>\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Landing","import React, {Component} from 'react'\nimport 'whatwg-fetch'\n// import cookie from 'react-cookies'\n// import {Link} from 'react-router-dom'\n// import {Redirect} from \"react-router-dom\";\n// import Comms from '../comm/Comms';\n\nclass MyBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slug: null,\n        };\n    }\n\n    loadCommsView() {\n        this.setState({\n            CommsView: true\n        });\n    }\n\n    render() {\n        const {blocks} = this.state;\n        // console.log(scrape);\n        const hrStyle = {\n            display: 'block',\n            height: '1px',\n            border: 0,\n            borderTop: '1px solid #ccc',\n            margin: '1em 0',\n            padding: '0',\n            color: 'white'\n        };\n\n        return (\n            <div>\n                <h2>Main Page</h2>\n            </div>\n        )\n    }\n}\n\nexport default MyBlock","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport './App.css';\n\nimport Comms from './comm/Comms';\nimport CommDetail from './comm/CommDetail';\nimport CommCreate from './comm/CommCreate';\n\nimport ScrapeDetail from './scrape/ScrapeDetail';\nimport ScrapeCreate from './scrape/ScrapeCreate'\n\nimport Landing from './landing/Landing'\n\nimport MyBlock from './myblock/MyBlock'\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path='/site-management/' component={MyBlock}/>\n                    <Route exact path='/site-management/comms/create' component={CommCreate}/>\n                    <Route exact path='/site-management/comms/:slug/edit' component={CommCreate}/>\n                    <Route exact path='/site-management/comms/' component={Comms}/>\n                    <Route exact path='/site-management/comms/:slug' component={CommDetail}/>\n                    <Route exact path='/scrape/' component={ScrapeCreate}/>\n                    <Route exact path='/scrape/results/:slug' component={ScrapeDetail}/>\n                    <Route exact path='' component={Landing}/>\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}